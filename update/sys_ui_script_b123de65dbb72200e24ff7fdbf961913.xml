<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description/>
        <global>false</global>
        <name>x_78492_profiling.Ng.profile.controller</name>
        <script><![CDATA[angular.module('profileApp', [])
.controller('ProfileController' , ['$document', '$http', function($document, $http){
	var self = this;
	var totalSkills = 0;
	self.profileId = '';
	self.userId = '';
	self.userName = '';
	self.profileName = '';
	self.skills = [];
	self.percentMatch = 0;
	self.totalSkills = 0;
	self.totalMatched = 0;
	self.totalLower = 0;
	self.totalHigher = 0;
	self.percentMatched = 0;
	self.percentLower = 0;
	self.percentHigher = 0;
	self.percentMissing = 0;
	self.levelFilter = '';
	self.profileSet = false;
	self.userSet = false;
	self.sortColumn = 'user_level_value';
	self.sortAscending = true;
	
	self.sortOrder = function(sortColumn){
		self.sortAscending = (self.sortColumn === sortColumn) ? !self.sortAscending : true;
		self.sortColumn = sortColumn;
	};
	
	self.setSkillFilter = function(skill){
		var skillFilter = skill === self.levelFilter ? '' : skill;
		self.levelFilter = skillFilter;
	};
	
	self.getGlyphClass = function(levelMatch){
		return {
			"column-row-text matching-text": levelMatch == 'matched',
			"column-row-text higher-text" : levelMatch == 'higher' || levelMatch == 'user_only',
			"column-row-text lower-text" : levelMatch == 'lower',
			"glyphicon glyphicon-remove missing-text" : levelMatch == 'missing'
		};
	};
	
	self.getOrderIcon = function(order){
		return {
			"icon-arrow-down-rounded sort-extra" : order == true,
			"icon-arrow-up-rounded sort-extra" : order == false
		};
	};
	
	self.resetData = function(){
		self.profileId = '';
		self.userId = '';
		self.skills = [];
		self.percentMatch = 0;
		self.totalSkills = 0;
		self.totalMatched = 0;
		self.totalLower = 0;
		self.totalHigher = 0;
		self.percentMatched = 0;
		self.percentLower = 0;
		self.percentHigher = 0;
		self.percentMissing = 0;
		self.levelFilter = '';
		self.showMatchingDetails = false;
		self.userName = '';
		self.profileName = '';
		
	};
	
	self.getData = function(profileElementId, userElementId ){
		var profileId = $document[0].getElementById(profileElementId).value;
		var userId = $document[0].getElementById(userElementId).value;
		if (!profileId || !userId){
			if (!userId && profileId){
				self.profileName = $document[0].getElementById('sys_display.' + profileElementId).value;
				self.profileSet = true;
				self.userSet = false;
			}
			if (!profileId && userId){
				self.userName = $document[0].getElementById('sys_display.' + userElementId).value;
				self.userSet = true;
				self.profileSet = false;
			}
			if (!profileId && !userId){
				self.profileSet = false;
				self.userSet = false;
			}
			self.setSkillFilter('');
			self.skills = [];
			return;
		}
		self.profileName = $document[0].getElementById('sys_display.' + profileElementId).value;
		self.userName = $document[0].getElementById('sys_display.' + userElementId).value;
		self.userSet = true;
		self.profileSet = true;
		$http.get('/api/x_78492_profiling/role_profile_data/get_data?user_id=' + userId + '&profile_id=' + profileId)
		.then(function(response){
			var skillsInfo = response.data.result;
			self.skills = skillsInfo.skills;
			self.totalSkills = skillsInfo.totalSkills;
			self.totalMatched = skillsInfo.totalMatched;
			self.totalHigher = skillsInfo.totalHigher;
			self.totalLower = skillsInfo.totalLower;
			self.totalMissing = skillsInfo.totalMissing;
			totalSkills = self.totalSkills;
			if (totalSkills > 0){
				self.percentMatched = (self.totalMatched/totalSkills * 100).toFixed(1);
				self.percentHigher = (self.totalHigher/totalSkills * 100).toFixed(1);
				self.percentLower = (self.totalLower/totalSkills * 100).toFixed(1);
				self.percentMissing = (self.totalMissing/totalSkills * 100).toFixed(1);
			}
			else {
				self.percentMatched = 0;
				self.percentHigher = 0;
				self.percentLower = 0;
				self.percentMissing = 0;
			}
		}, function(errResponse){
			jslog(JSON.stringify(errResponse));
			self.setSkillFilter('');
			self.skills = [];
			self.percentMatched = 0;
			self.percentHigher = 0;
			self.percentLower = 0;
			self.percentMissing = 0;
		});
		
	};
}]);]]></script>
        <script_name>Ng.profile.controller</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>jloftas</sys_created_by>
        <sys_created_on>2016-12-19 22:29:56</sys_created_on>
        <sys_id>b123de65dbb72200e24ff7fdbf961913</sys_id>
        <sys_mod_count>194</sys_mod_count>
        <sys_name>x_78492_profiling.Ng.profile.controller</sys_name>
        <sys_package display_value="Role Profiling" source="x_78492_profiling">98075f7fdb672200e24ff7fdbf961997</sys_package>
        <sys_policy/>
        <sys_scope display_value="Role Profiling">98075f7fdb672200e24ff7fdbf961997</sys_scope>
        <sys_update_name>sys_ui_script_b123de65dbb72200e24ff7fdbf961913</sys_update_name>
        <sys_updated_by>jloftas</sys_updated_by>
        <sys_updated_on>2017-05-01 10:12:45</sys_updated_on>
        <ui_type>0</ui_type>
        <use_scoped_format>false</use_scoped_format>
    </sys_ui_script>
</record_update>
